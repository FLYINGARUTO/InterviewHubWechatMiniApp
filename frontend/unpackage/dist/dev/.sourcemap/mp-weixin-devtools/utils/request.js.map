{"version":3,"names":["request","option","Promise","resolve","reject","common_vendor","index","url","config_config","config","apiBaseUrl","data","header","method","success","res","code","errInfo","_a","message","showToast","icon","duration","title","setTimeout","reLaunch","__f__","Error","fail","err","errMsg","includes"],"sources":["request.js"],"sourcesContent":["import config from \"../config/config\"\r\n\r\n// Wrapper function for uni.request\nconst request = (option) => {\n    return new Promise((resolve, reject) => {\n        // Make an HTTP request using uni.request\n        uni.request({\n            url: config.apiBaseUrl + option.url, // Combine base URL with endpoint\n            data: option.data || {}, // Use provided data or an empty object\n            header: option.header || {}, // Use provided headers or an empty object\n            method: option.method || \"GET\", // Default HTTP method is GET\n\n            // Callback for successful request\n            success: (res) => {\n                // Check if the response code indicates success\n                if (res.data.code == 20000) {\n                    resolve(res); // Resolve the promise with the response\n                } else {\n                    // Handle business logic errors\n                    let errInfo = res.data?.message || \"unknown error\"; // Default to 'unknown error' if no message is provided\n                    uni.showToast({\n                        icon: \"error\", // Display an error icon\n                        duration: 3000, // Show the toast for 3 seconds\n                        title: errInfo // Show the error message\n                    });\n                    setTimeout(() => {\n\t\t\t\t\t\tif(res.data.code==20003){\n\t\t\t\t\t\t\tuni.reLaunch({\n\t\t\t\t\t\t\t\turl:'/pages/login'\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(\"where error occured:\",res)\n                        reject(new Error(errInfo)); // Reject the promise after a delay\n                    }, 3000);\n                }\n            },\n\n            // Callback for failed request\n            fail: (err) => {\n                let errInfo = '';\n                // Handle specific error scenarios\n                if (err.errMsg.includes('timeout')) {\n                    errInfo = 'request timeout, please try again';\n                } else if (err.errMsg.includes('abort')) {\n                    errInfo = 'request data wrong, please try again';\n                } else {\n                    errInfo = 'Internet request wrong';\n                }\n                \n                // Show a toast notification with the error\n                uni.showToast({\n                    icon: \"none\", // Display a neutral icon\n                    title: errInfo, // Show the error message\n                    duration: 3000 // Show the toast for 3 seconds\n                });\n                reject(new Error(errInfo)); // Reject the promise with the error message\n            }\n        });\n    });\n};\n\n// Export the request function as the default export\nexport default request;\n"],"mappings":";;;;;AAGK,IAACA,OAAA,GAAU,SAAVA,QAAWC,MAAA,EAAW;EACxB,OAAO,IAAIC,OAAA,CAAQ,UAACC,OAAA,EAASC,MAAA,EAAW;IAEpCC,aAAA,CAAAC,KAAA,CAAIN,OAAA,CAAQ;MACRO,GAAA,EAAKC,aAAA,CAAMC,MAAA,CAACC,UAAA,GAAaT,MAAA,CAAOM,GAAA;MAAA;MAChCI,IAAA,EAAMV,MAAA,CAAOU,IAAA,IAAQ,CAAE;MAAA;MACvBC,MAAA,EAAQX,MAAA,CAAOW,MAAA,IAAU,CAAE;MAAA;MAC3BC,MAAA,EAAQZ,MAAA,CAAOY,MAAA,IAAU;MAAA;MAAA;MAGzBC,OAAA,EAAS,SAAAA,QAACC,GAAA,EAAQ;;QAEd,IAAIA,GAAA,CAAIJ,IAAA,CAAKK,IAAA,IAAQ,KAAO;UACxBb,OAAA,CAAQY,GAAG;QAC/B,OAAuB;UAEH,IAAIE,OAAA,KAAUC,EAAA,GAAAH,GAAA,CAAIJ,IAAA,KAAJ,gBAAAO,EAAA,CAAUC,OAAA,KAAW;UACnCd,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;YACVC,IAAA,EAAM;YAAA;YACNC,QAAA,EAAU;YAAA;YACVC,KAAA,EAAON;YAAA;UAC/B,CAAqB;;UACDO,UAAA,CAAW,YAAM;YAC/B,IAAGT,GAAA,CAAIJ,IAAA,CAAKK,IAAA,IAAM,OAAM;cACvBX,aAAA,CAAAC,KAAA,CAAImB,QAAA,CAAS;gBACZlB,GAAA,EAAI;cACZ,CAAQ;YACD;YACDF,aAAA,CAAAC,KAAA,CAAYoB,KAAA,0DAAuBX,GAAG;YACpBX,MAAA,CAAO,IAAIuB,KAAA,CAAMV,OAAO,CAAC;UAC5B,GAAE,GAAI;QACV;MACJ;MAAA;MAGDW,IAAA,EAAM,SAAAA,KAACC,GAAA,EAAQ;QACX,IAAIZ,OAAA,GAAU;QAEd,IAAIY,GAAA,CAAIC,MAAA,CAAOC,QAAA,CAAS,SAAS,GAAG;UAChCd,OAAA,GAAU;QACb,WAAUY,GAAA,CAAIC,MAAA,CAAOC,QAAA,CAAS,OAAO,GAAG;UACrCd,OAAA,GAAU;QAC9B,OAAuB;UACHA,OAAA,GAAU;QACb;QAGDZ,aAAA,CAAAC,KAAA,CAAIc,SAAA,CAAU;UACVC,IAAA,EAAM;UAAA;UACNE,KAAA,EAAON,OAAA;UAAA;UACPK,QAAA,EAAU;UAAA;QAC9B,CAAiB;;QACDlB,MAAA,CAAO,IAAIuB,KAAA,CAAMV,OAAO,CAAC;MAC5B;IACb,CAAS;EACT,CAAK;AACL","ignoreList":[]}